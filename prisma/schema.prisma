generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Lead model (maps to Contact table for backward compatibility)
model Lead {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  email         String?   @unique
  phone         String?
  source        String? // "How heard"
  stage         LeadStage @default(NEW)
  lastContacted DateTime?
  archivedAt    DateTime?
  noShowAt      DateTime?

  // existing fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ghlId     String?  @unique // GHL contact ID for deduplication
  ghlUrl    String?
  tags      String   @default("[]") // JSON array stored as string

  // relations
  activities Activity[]
  tasks      Task[]

  @@index([lastName])
  @@index([phone])
  @@index([email])
  @@map("Contact") // Map to existing Contact table
}

model Activity {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  date      DateTime @default(now())

  contactId String?
  contact   Lead?   @relation(fields: [contactId], references: [id], onDelete: SetNull)

  type      ActivityType
  summary   String
  details   String?
  direction Direction?
  outcome   Outcome?

  // KPI metadata
  count     Int? // dials, connects, closes
  revenue   Float? // revenue dollars
  notes     String?
  voicemail Boolean @default(false)
  smsSent   Boolean @default(false)

  @@index([contactId])
  @@index([date])
  @@index([type])
}

model Task {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contactId String?
  contact   Lead?   @relation(fields: [contactId], references: [id], onDelete: Cascade)

  title    String
  dueAt    DateTime?
  status   TaskStatus   @default(OPEN)
  source   TaskSource   @default(MANUAL)
  priority TaskPriority @default(MEDIUM)
  label    String?
  stage    TaskStage    @default(NEW)

  // Archive fields
  completedAt DateTime?
  archivedAt  DateTime?

  @@index([contactId])
  @@index([status])
  @@index([dueAt])
  @@index([priority])
  @@index([stage])
  @@index([archivedAt])
}

model Setting {
  id        String   @id @default("singleton")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  kixieUrl         String  @default("https://app.kixie.com")
  icsCalendarUrl   String?
  dataDir          String  @default("./data")
  ghlOppsUrl       String?
  chromeProfileDir String?
  dashboardLayout  Json? // Stores user's dashboard widget layout
}

model ImportBatch {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  filename  String
  path      String // absolute or resolved path under DATA_DIR/imports
  total     Int
  imported  Int
  errors    Int
  note      String?
}

model DiscoverySession {
  id          String   @id @default(cuid())
  sessionId   String   @unique
  clientId    String? // Link to Lead.id
  clientName  String?
  primaryDob  String?
  zip         String?
  state       String?
  county      String?
  jsonPayload Json
  yamlPayload String   @default("")
  rapport     Json     @default("[]")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([sessionId])
  @@index([clientId])
  @@index([createdAt])
}

enum LeadStage {
  NEW
  WORKING
  QUALIFIED
  BOOKED
  NO_SHOW
  NURTURE
  CLOSED
}

enum ActivityType {
  NOTE
  CALL
  EMAIL
  SMS
  TASK
  DIAL
  CONNECT
  CLOSE
  REVENUE
}

enum Direction {
  INBOUND
  OUTBOUND
}

enum Outcome {
  DIAL
  CONNECT
  CLOSE
  LEFT_VM
  NO_ANSWER
}

enum TaskStatus {
  OPEN
  DONE
}

enum TaskSource {
  MANUAL
  AI_SUGGESTED
  SYSTEM
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStage {
  NEW
  WORKING
  WAITING
  DONE
}
